#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: PR validation
on:
  pull_request:
    branches: ['main']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Install deps
        run: sudo apt-get install -y libboost-python-dev

      - name: Install Pulsar C++ client
        run: build-support/install-cpp-client.sh

      - name: CMake
        run: cmake .

      - name: Build
        run: make -j8

      - name: Python install
        run: |
            ./setup.py bdist_wheel
            WHEEL=$(find dist -name '*.whl')
            pip3 install ${WHEEL}[avro]

      - name: Start Pulsar service
        run: ./build-support/pulsar-test-service-start.sh

      - name: Run unit tests
        run: ./tests/run-unit-tests.sh

      - name: Stop Pulsar service
        run: ./build-support/pulsar-test-service-stop.sh

  build-static-link:
    name: Build statically linked Python library
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Install OpenSSL
        run: sudo apt install libssl-dev

      - name: Install Pulsar C++ client
        run: build-support/install-cpp-client.sh

      - name: Install dependencies
        run: ./build-support/install-dependencies.sh ./deps

      - name: Build Python
        run: |
          cmake -B build -DLINK_STATIC=ON -DCMAKE_PREFIX_PATH=$PWD/deps/install -DLINK_OPENSSL=ON
          cmake --build build -j8

      - name: Verify the extension
        run: cd build && python3 -c 'import _pulsar'
